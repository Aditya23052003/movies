import tensorflow as tf 
from tensorflow.keras.datasets import imdb 
from tensorflow.keras.preprocessing.sequence import pad_sequences 
from tensorflow.keras.models import Sequential 
from tensorflow.keras.layers import Embedding, Dense, GlobalAveragePooling1D, Dropout

(X_train, y_train), (X_test, y_test) = imdb.load_data(num_words=10000) 
X_train = pad_sequences(X_train, maxlen=200) 
X_test = pad_sequences(X_test, maxlen=200) 

model = Sequential([ 
Embedding(10000, 32),
Dense(128, activation='relu'),
Dropout(0.2),
GlobalAveragePooling1D(), 
Dense(1, activation='sigmoid') 
]) 

model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy']) 
model.fit(X_train, y_train, epochs=5, batch_size=64, validation_data=(X_test, y_test)) 

from tensorflow.math import confusion_matrix 

pred = model.predict(X_test)

matrix = confusion_matrix(pred, y_test)

matrix

import matplotlib.pyplot as plt
import seaborn as sns

plt.figure(figsize=(8, 6))  # Adjust figure size for better readability
sns.heatmap(matrix, annot=True, fmt=".0f", cmap="Blues")
plt.xlabel("Predicted Label")
plt.ylabel("True Label")
plt.title("Confusion Matrix")
plt.show()

